
# Basic tests.

tests:
  -
   input: {}
   query: >
     let v = 1
     [for ([1,2,3,4])
       let v = 2
       . + $v]
   output: "[3,4,5,6]"

  -
   input: {}
   query: >
     let v = 1
     if ($v != .)
       let v = 5
       $v
     else
       $v
   output: 5

  -
   input: "{\"a\" : 2}"
   query: >
     let v = 1
     {for (.) let v = 2 .key : .value + $v}
   output: "{\"a\" : 4}"

  -
   input: 3
   query: >
     let v = 1
     {
       let v = 2
       "a" : $v,
       "b" : $v + 2,
       "c" : $v + .
     }
   output: "{\"a\" : 2, \"b\" : 4, \"c\" : 5}"

  -
   input: "{\"foo\" : 1}"
   query: >
     let v = 1
     {
       * : . + $v
     }
   output: "{\"foo\" : 2}"

  -
   input: "{\"foo\" : 1}"
   query: >
     let v = 1
     {
       * : .
     }
   output: "{\"foo\" : 1}"

  -
   input: {}
   query: >
     let foo = "something"
     $foo[4 : ]
   output: '"thing"'

  -
   input: {}
   query: >
      let lookup = {
        "dk" : "Denmark",
        "se" : "Sweden"
      }
      let reverse = {for ($lookup) .value : .key}
      get-key($reverse, "Denmark")
   output: '"dk"'

  -
    input: "{}"
    query: . + null
    output: "{}"

  -
    input: "{}"
    query: null + .
    output: "{}"

  -
    input: "{\"foo\" : 2}"
    query: null + .
    output: "{\"foo\" : 2}"

  -
    input: "[]"
    query: . + null
    output: "[]"

  -
    input: "[]"
    query: null + .
    output: "[]"

  -
    input: "[2,3]"
    query: null + .
    output: "[2,3]"

  -
    input: |
      {
        "a": {
          "b": 1,
          "c": 2,
          "d": 3
        }
      }
    query: .a | [.b, .c, .d]
    output: |
      [1, 2, 3]
  -
    input: |
      { "bar": "a", "baz": {"bar": "b"}}
    query: |
      {
        "foo" : .bar,
        * : .
      } | .baz
    output: |
      {"bar": "b"}
  -
    input: |
      { "bar": "a", "baz": {"bar": "b"}}
    query: |
      .baz | {
        "foo" : .bar,
        * : .
      }
    output: |
      {"foo": "b", "bar": "b"}

  -
    input: |
      { "foo": {"a": "b"}}
    query: |
      .foo | {"x": "y", * : .}
    output: |
      {
        "x": "y",
        "a": "b"
      }

  - input:
    query: |
      { "a": "b" } | {
                        "type" : "Anonymized-View",
                        * : .
                     }
    output: |
      {
        "type": "Anonymized-View",
         "a": "b"
      }

  -
    input:
    query: |
      {
        "bar": "baz",
        "foo" :
          { "a": "b" } | {
                            "type" : "Anonymized-View",
                            * : .
                         }
      }

    output: |
      {
        "bar": "baz",
        "foo" :
          {
            "type" : "Anonymized-View",
             "a": "b"
          }
      }

  - input:
    query: |
      1 == 3 | (. - 2)
    output: true

  - input:
    query: |
      true or false | { "a" : .}
    output: |
      true

  - input:
    query: |
      1 + 3 | (. * 5)
    output: |
      20

  - input:
    query: |
      1 | [.,.] | {"a": ., "b": .}
    output: |
      { "a": [1,1],"b": [1,1]}

  - input: |
      {"foo" : 25}
    query: |
      if (true) "Отключен" else "Подключен"
    output: |
      "Отключен"

  - input: |
      {"foo" : 25}
    query: |
      if (true) "string ends with a slash\\" else "let it be"
    output: |
      "string ends with a slash\\"
