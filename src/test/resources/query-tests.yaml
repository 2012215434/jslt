
# Basic tests.

tests:
  -
   input: {}
   query: >
     let v = 1
     [for ([1,2,3,4])
       let v = 2
       . + $v]
   output: "[3,4,5,6]"

  -
   input: {}
   query: >
     let v = 1
     if ($v != .)
       let v = 5
       $v
     else
       $v
   output: 5

  -
   input: "{\"a\" : 2}"
   query: >
     let v = 1
     {for (.) let v = 2 .key : .value + $v}
   output: "{\"a\" : 4}"

  -
   input: 3
   query: >
     let v = 1
     {
       let v = 2
       "a" : $v,
       "b" : $v + 2,
       "c" : $v + .
     }
   output: "{\"a\" : 2, \"b\" : 4, \"c\" : 5}"

  -
   input: "{\"foo\" : 1}"
   query: >
     let v = 1
     {
       * : . + $v
     }
   output: "{\"foo\" : 2}"

  -
   input: "{\"foo\" : 1}"
   query: >
     let v = 1
     {
       * : .
     }
   output: "{\"foo\" : 1}"

  -
   input: {}
   query: >
     let foo = "something"
     $foo[4 : ]
   output: '"thing"'

  -
   input: {}
   query: >
      let lookup = {
        "dk" : "Denmark",
        "se" : "Sweden"
      }
      let reverse = {for ($lookup) .value : .key}
      get-key($reverse, "Denmark")
   output: '"dk"'

  -
    input: "{}"
    query: . + null
    output: "{}"

  -
    input: "{}"
    query: null + .
    output: "{}"

  -
    input: "{\"foo\" : 2}"
    query: null + .
    output: "{\"foo\" : 2}"

  -
    input: "[]"
    query: . + null
    output: "[]"

  -
    input: "[]"
    query: null + .
    output: "[]"

  -
    input: "[2,3]"
    query: null + .
    output: "[2,3]"

  - input: |
      {"foo" : 25}
    query: |
      if (true) "Отключен" else "Подключен"
    output: |
      "Отключен"

  - input: |
      {"foo" : 25}
    query: |
      if (true) "string ends with a slash\\" else "let it be"
    output: |
      "string ends with a slash\\"

# parse-url tests

  - input:
    query: parse-url("https://www.aftonbladet.se/nyheter/a/opyK1R/snosmocka-pa-ingang--kan-bli-20-centimeter?utm_source=aaaa&utm_campaign=bbbb&utm_medium=cccc&utm_content=dddd&utm_term=eeee")
    output: |
      {
           "host": "www.aftonbladet.se",
           "parameters": {
             "utm_campaign": ["bbbb"],
             "utm_content": ["dddd"],
             "utm_medium": ["cccc"],
             "utm_source": ["aaaa"],
             "utm_term": ["eeee"]
           },
           "path": "/nyheter/a/opyK1R/snosmocka-pa-ingang--kan-bli-20-centimeter",
           "query": "utm_source=aaaa&utm_campaign=bbbb&utm_medium=cccc&utm_content=dddd&utm_term=eeee",
           "scheme": "https"
         }
    description: |
      missing port in url means missing `port` key in output

  - input:
    query: parse-url("http://example.org/#foo")
    output: |
      {
              "host": "example.org",
              "path": "/",
              "fragment": "foo",
              "scheme": "http"
      }
  - input:
    query: parse-url("http://example.com")
    output: |
      {
           "host": "example.com",
           "scheme": "http"
      }
    description:
      - No path

  - input:
    query: parse-url("https://www.example.com/?aa=1&aa=2&bb=&cc")
    output: |
      {
           "host": "www.example.com",
           "parameters": {
             "aa": ["1","2"],
             "bb": [null],
             "cc": [null]
           },
          "path": "/",
          "query": "aa=1&aa=2&bb=&cc",
          "scheme": "https"
         }
    description: |
      - multivalued parameter
      - null parameter
      - parameter no equal sign

  - input:
    query: parse-url("ftp://username:password@host.com/")
    output: |
      {
          "host": "host.com",
          "path": "/",
          "scheme": "ftp",
          "userinfo": "username:password"
      }
    description: |
      - userinfo